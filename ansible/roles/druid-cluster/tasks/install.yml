---
# file: install.yml
# - name: Install htop
#   apt: name=htop update_cache=yes
#        state=present
#   become: yes

# - name: Install iotop
#   apt: name=iotop update_cache=yes
#        state=present
#   become: yes

# - name: Install nload
#   apt: name=nload update_cache=yes
#        state=present
#   become: yes
# - name: Install Java
#   hosts: druid
#   become: yes
#   roles: 
#     - jdk-1.8.0_121

# - name: Install java and zookeeper cluster for druid
#   hosts: druid-zookeeper
#   become: yes
#   roles:
#     - {role: zookeeper-upgrade}
#   vars:
#     zookeeper_group: "{{ groups['druid-zookeeper'] }}"

# - name: Install role druid
#   hosts: druid
#   become: yes
#   roles:
#     - {role: analytics-druid, when: "'coordinator' in group_names", druid_role: 'coordinator', service: 'coordinator' }
#     - {role: analytics-druid, when: "'overlord' in group_names", druid_role: 'overlord', service: 'overlord'}
#     - {role: analytics-druid, when: "'broker' in group_names", druid_role: 'broker', service: 'broker'}
#     - {role: analytics-druid, when: "'historical' in group_names", druid_role: 'historical', service: 'historical'}
#     - {role: analytics-druid, when: "'middlemanager' in group_names", druid_role: 'middlemanager', service: 'middleManager' }

- name: Create druid user
  user:
    name: "{{ druid_user }}"

- name: Create druid deploy directory
  file: path=/opt/druid state=directory mode=0755
        owner={{ druid_user }}
  become: yes

- name: Create druid logging directory
  file: path={{ druid_log_path }} state=directory mode=0755
        owner={{ druid_user }}
  become: yes

- name: Create mnt/tmp dir only for historical middleManager and realtime nodes
  file: path=/mnt/tmp state=directory mode=0755
        owner={{ druid_user }}
  become: yes
  when: druid_role == "historical" or druid_role == "middleManager" or druid_role == "realtime"

- name: Create mnt/persistent dir only for historical nodes
  file: path=/mnt/persistent state=directory mode=0755
        owner={{ druid_user }}
  become: yes
  when: druid_role == "historical"

- name: Create mnt/persistent/zk_druid dir only for historical nodes
  file: path=/mnt/persistent/zk_druid state=directory mode=0755
        owner={{ druid_user }}
  become: yes
  when: druid_role == "historical"

- name: Create mnt/druid dir only for middleManager nodes
  file: path=/mnt/druid/ state=directory mode=0755
        owner={{ druid_user }}
  become: yes
  when: druid_role == "middleManager"

- name: Create mnt/druid/hadoop-tmp dir only for middleManager nodes
  file: path=/mnt/druid/hadoop-tmp state=directory mode=0755
        owner={{ druid_user }}
  become: yes
  when: druid_role == "middleManager"

- name: Create mnt/druid/task dir only for middleManager nodes
  file: path=/mnt/druid/task state=directory mode=0755
        owner={{ druid_user }}
  become: yes
  when: druid_role == "middleManager"

- name: Create mnt/druid/segment_cache dir only for middleManager nodes
  file: path=/mnt/druid/segment_cache state=directory mode=0755
        owner={{ druid_user }}
  become: yes
  when: druid_role == "middleManager"

- name: Update APT package manager repositories cache
  apt:
    update_cache: yes

- name: Install OpenJDK Java
  apt:
    name: "{{ item }}"
    state: present
  with_items:
    - openjdk-8-jdk

- name: Download Druid version {{ druid_version }}
  get_url:
    url: http://archive.apache.org/dist/incubator/druid/{{ druid_version }}-incubating/apache-druid-{{ druid_version }}-incubating-bin.tar.gz
    dest: /opt/druid/druid-{{ druid_version }}-bin.tar.gz
    checksum: sha256:{{ druid_checksum }}
    mode: 0777

- name: Un-tar druid download
  unarchive:
    src: /opt/druid/druid-{{ druid_version }}-bin.tar.gz
    dest: /opt/druid/
    copy: no
    creates: /opt/druid/druid-{{ druid_version }}
  become: yes

- name: Change ownership of download path
  file: path=/opt/druid owner={{ druid_user }} recurse=yes mode=0755
  become: yes

# - name: Download extensions with pull-deps
#   shell: 'java -classpath "{{ druid_path }}lib/*" -Ddruid.extensions.directory={{ druid_path }}extensions -Ddruid.extensions.hadoopDependenciesDir={{ druid_path }}hadoop-dependencies io.druid.cli.Main tools pull-deps -c {{ item.group_id }}:{{ item.artifact_id }}:{{ item.version }}'
#   with_items: "{{ druid_community_extensions }}"
#   when: druid_community_extensions
#   become: yes

- name: Add SIGAR library
  copy:
    src: files/sigar-1.6.5.132.jar
    dest: "{{ druid_path }}lib/sigar-1.6.5.132.jar"
    owner: "{{ druid_user }}"
    group: staff
    mode: 755
  when: druid_install_sigar is defined and druid_install_sigar
